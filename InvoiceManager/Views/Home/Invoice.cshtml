@model InvoiceManager.Models.ViewModels.EditInvoiceViewModel

@{
    ViewBag.Title = Model.Heading;
}

<h1 class="mb-3">@Model.Heading</h1>
@if (Model.Invoice.Id != 0)
{
    <button class="btn btn-primary mb-3"
            onclick='window.location.href="@Url.Action("InvoicePosition", "Home",
                                          new {invoiceId = Model.Invoice.Id})"'>
        Dodaj pozycje
    </button>

    <button class="btn btn-secondary mb-3"
            onclick="generatePdf()">
        Generuj PDF
    </button>
}

<div class="row">
    <div class="col-lg-6">
        @using (Html.BeginForm("Invoice", "Home"))
        {
            if (Model.Invoice.Id == 0)
            {
                <p class="alert alert-info mt-4 mb-4">
                    Pola tytuł, klient, sposób płatności i termin są
                    <strong>wymagane</strong>
                </p>
            }
                @Html.HiddenFor(x => x.Invoice.Id)
                @Html.HiddenFor(x => x.Invoice.UserId)
                @Html.HiddenFor(x => x.Invoice.CreatedDate)

                <div class="row mb-3"> 
                        @Html.LabelFor(x => x.Invoice.Title)
                        @Html.TextBoxFor(x => x.Invoice.Title,
                        new { @class = "form-control mt-3", autofocus = "autofocus" })
                </div>
                <div class="row mb-3">
                    
                        @Html.LabelFor(x => x.Invoice.ClientId)
                        @Html.DropDownListFor(x => x.Invoice.ClientId,
                        new SelectList(Model.Clients, "Id", "Name"),
                        "--Wybierz klienta--",
                        new { @class = "form-control mt-3" })
                </div>
                if (Model.Invoice.Id != 0)
                {
                    <div class="row mb-3">
                            @Html.LabelFor(x => x.Invoice.Value)
                            @Html.TextBoxFor(x => x.Invoice.Value,
                            new { @class = "form-control mt-3", @readonly = "readonly" })
                    </div>
                }
                <div class="row mb-3 ">
                        @Html.LabelFor(x => x.Invoice.MethodOfPaymentId)
                        @Html.DropDownListFor(x => x.Invoice.MethodOfPaymentId,
                        new SelectList(Model.MethodOfPayments, "Id", "Name"),
                        "--Wybierz sposób płatności--",
                        new { @class = "form-control mt-3" })
                </div>
                <div class="row mb-3 ">
                        @Html.LabelFor(x => x.Invoice.PaymentDate)
                        @Html.TextBoxFor(x => x.Invoice.PaymentDate, "{0:dd-MM-yyyy}",
                        new { 
                                @class = "form-control mt-3",
                                @id="PaymentDate",
                                autocomplete = "off"
                        })
                </div>
                <div class="row mb-3">
                        @Html.LabelFor(x => x.Invoice.Comments)

                        @Html.TextAreaFor(x => x.Invoice.Comments,
                        new { @class = "form-control mt-3" })
                </div>
                <button class="btn btn-primary btn-lg mb-5" 
                        type="submit">
                    Zapisz
                </button>

            
        }
    </div>
    <div class="col-5 offset-lg-1">
        @if(Model.Invoice.Id !=0)
         {
            @Html.Partial("_InvoicePosition",Model.Invoice.InvoicePositions)
            //dodac widok z nazwa jak wyzej
         }
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">
        function generatePdf() {
            
        }
        function deleteInvoicePosition() {
            if (!confirm("Czy na pewno chcesz usunąc pozycję z faktury?"))
                return;
        }
        $(document).ready(function () {
            $('#PaymentDate').datepicker({
                format: "dd/mm/yyyy",
                language: "pl",
                multidate: false,
                autoclose: true,
                todayHighlight: true,
                forceParse: false
            })
        });
    </script>

}

