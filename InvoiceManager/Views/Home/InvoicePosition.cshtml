@model InvoiceManager.Models.ViewModels.EditInvoicePositionViewModel

@{
    ViewBag.Title = Model.Heading;
}

<h1>@Model.Heading</h1>
@using (Html.BeginForm("InvoicePosition", "Home"))
{
    if (Model.InvoicePosition.Id == 0)
    {
        <p class="alert alert-info mt-4 mb-4">
            Pola lp, produkt, oraz ilość
            <strong>wymagane</strong>
        </p>
        @Html.HiddenFor(x => x.InvoicePosition.Id)
        @Html.HiddenFor(x => x.InvoicePosition.InvoiceId)

        <div class="row mb-3">
            @Html.LabelFor(x => x.InvoicePosition.Lp)
            @Html.TextBoxFor(x => x.InvoicePosition.Lp,
            new { @class = "form-control mt-3", autofocus = "autofocus" })
        </div>
        <div class="row mb-3">

            @Html.LabelFor(x => x.InvoicePosition.ProductId)
            @Html.DropDownListFor(x => x.InvoicePosition.ProductId,
            new SelectList(Model.Products, "Id", "Name"),
            "--Wybierz produkt--",
            new { @class = "form-control mt-3" })
        </div>
        <div class="row mb-3">
            @Html.LabelFor(x => x.InvoicePosition.Quantity)
            @Html.TextBoxFor(x => x.InvoicePosition.Quantity,
            new { @class = "form-control mt-3" })
        </div>
        if (Model.InvoicePosition.Id != 0)
        {
            <div class="row mb-3">
                @Html.LabelFor(x => x.InvoicePosition.Value)
                @Html.TextBoxFor(x => x.InvoicePosition.Value,
                new { @class = "form-control mt-3", @readonly = "readonly" })
            </div>
        }
        <button class="btn btn-primary btn-lg mb-5"
                type="submit">
            Zapisz
        </button>
    }

}

