@model InvoiceManager.Models.ViewModels.EditProductViewModel
@{
    ViewBag.Title = Model.Heading;
}

<h1 class="mb-3">@Model.Heading</h1>
<div class="row">
    <div class="col">
        @using (Html.BeginForm("Product", "Product"))
        {
            @Html.AntiForgeryToken();
            @Html.ValidationSummary();

            if (Model.Product.Id == 0)
            {
                <p class="alert alert-info mt-4 mb-4">
                    Pola nazwa, wartość są
                    <strong>wymagane</strong>
                </p>
            }
            @Html.HiddenFor(x => x.Product.UserId)
            @Html.HiddenFor(x => x.Product.Id)
           
            <div class="row mb-3">
                @Html.LabelFor(x => x.Product.Name)
                @Html.TextBoxFor(x => x.Product.Name,
                new { @class = "form-control mt-3", autofocus = "autofocus" })
                @Html.ValidationMessageFor(x => x.Product.Name)
            </div>
            <div class="row mb-3">
                @Html.LabelFor(x => x.Product.Value)
                @Html.TextBoxFor(x => x.Product.Value,
                new { @class = "form-control mt-3" })
                @Html.ValidationMessageFor(x => x.Product.Value)
            </div>

            <button class="btn btn-primary btn-lg mb-5"
                    type="submit">
                Zapisz
            </button>

        }
    </div>
</div>
@section Scripts{
    
    <script type="text/javascript">
        $(document).ready(
            function () {

                $.validator.methods.number = function (value, element) {
                    return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
                }
            });
    </script>
}